#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define SYM  1
#define NUM  2
#define NAV  3
#define DEV  4
#define MULT KP_MULTIPLY
#define MEH LG(LA(LSHIFT))

/ {
    behaviors {
        hr: home-row-hold-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            flavor = "balanced";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <280>; // repeat on tap-into-hold
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;

            // hold-trigger-key-positions = <KEYS_R THUMBS>;
            // hold-trigger-on-release; // delay positional check until key-release
        };
        ltq: layer-tap-hold-prefer {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_HOLD_PREFERRED";
            flavor = "hold-preferred";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            bindings = <&mo>, <&kp>;
        };
    };

    // Issues:
    //  ✅ quotes are akward to reach
    //  - cmd+c is hard to reach with one hand
    //  - we have no DEL
    //  ✅ configure MEH
    //  - cmd+tab and cmd+` is awkward
    //  - we might want to move tab to nother layer as i dont need it that much

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "BASE";
            bindings = <
         &kp Q        &kp W       &kp E        &kp R        &kp T      &kp Y      &kp U         &kp I       &kp O       &kp P
         &hr LCTRL A  &hr LALT S  &hr LGUI D   &hr LSHFT F  &kp G      &kp H      &hr RSHFT J   &hr RGUI K  &hr RALT L  &hr RCTRL SQT
&kp ESC  &kp Z        &kp X       &kp C        &kp V        &kp B      &kp N      &kp M         &kp COMMA   &kp DOT     &kp FSLH       &kp RET
                                  &mt MEH TAB  &lt NAV SPC  &mo NUM    &kp LSHFT  &ltq SYM ESC  &kp BSPC
            >;
        };

        sym_layer {
            label = "SYM";
            bindings = <
       &kp EXCL   &kp AT     &kp HASH   &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp ASTERISK  &none     &none
       &kp TILDE  &kp MINUS  &kp EQUAL  &kp LPAR  &kp LT       &kp GT     &kp RPAR  &kp SEMI      &kp PIPE  &none
&none  &kp GRAVE  &kp UNDER  &kp PLUS   &kp LBRC  &kp LBKT     &kp RBKT   &kp RBRC  &kp COLON     &none     &kp BSLH  &none
                             &trans     &mo DEV   &trans       &trans     &trans    &trans
            >;
        };

        num_layer {
            label = "NUM";
            bindings = <
       &none      &none     &none     &none      &none     &none   &kp N7  &kp N8  &kp N9  &none
       &kp LCTRL  &kp LALT  &kp LGUI  &kp LSHFT  &none     &none   &kp N4  &kp N5  &kp N6  &none
&none  &none      &none     &none     &none      &none     &none   &kp N1  &kp N2  &kp N3  &none  &none
                            &none     &trans     &trans    &trans  &kp N0  &trans
            >;
        };

        nav_layer {
            label = "NAV";
            bindings = <
       &none      &none     &none       &none        &none     &none     &none          &none           &none      &none
       &kp LCTRL  &kp LALT  &kp LGUI    &kp LSHFT    &none     &kp LEFT  &kp DOWN       &kp UP          &kp RIGHT  &none
&none  &none      &none     &kp K_COPY  &kp K_PASTE  &none     &none     &kp C_AC_COPY  &kp C_AC_PASTE  &none      &none  &none
                            &trans      &none        &trans    &trans    &mo DEV        &trans
            >;
        };

        device_layer {
            label = "DEV";
            bindings = <
       &kp C_AL_LOCK  &none  &none   &kp C_BRI_UP  &none     &none   &kp K_VOL_UP  &none   &none  &none
       &none          &none  &none   &kp C_BRI_DN  &none     &none   &kp K_VOL_DN  &none   &none  &none
&none  &none          &none  &none   &none         &none     &none   &none         &none   &none  &none  &none
                             &trans  &none         &trans    &trans  &none         &trans
            >;
        };
    };
};
